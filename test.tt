
rem { Test }

const ONE = 1;

global g;
array a;

include "hello.tt";

function assert( value, line ) {
	if !( value ) {
		throw $str( "Assertion failed on line " line );
	}
}

function testvoid() {
}

function testvars(x) {
	var y;
	let y = x;
	let g = y;
	if !('( g = ONE ) ) {
		throw "testvars()";
	}
}

function testarray() {
	var err;
	dim [ a 3 ];
	set [ a 0 ] = "a";
	set [ a 1 ] = 1;
	set [ a 2 ] = [ a 0 ];
	dim [ a 2 ];
	try {
		set [ a 2 ] = 2;
		throw 0;
	} catch err {
	}
	dim [ a 1 ];
	if '( !('( err = 2 ) ) || $cmp( [ a 0 ] "a" ) ) {
		throw "testarray()";
	}
}

function testfact() {
	if !('( fact( 3 ) = 6 ) ) {
		throw "testfact()";
	}
}

function fact( x ) {
	if >( x 1 ) {
		return *( x fact( -( x 1 ) ) );
	} else {
		return 1;
	}
}

function testswitch() {
	var x;
	switch $tup( "a" 1 ) {
		case 1 {
			let x = 0;
		}
		case "a" {
			let x = 0;
		}
		case $tup( "a" 1 ) {
			inc x;
		}
	}
	switch "a" {
		case "a" {
			inc x;
		}
	}
	switch 1 {
		case 1 {
			inc x;
		}
		default {
			let x = 0;
		}
	}
	switch 2 {
		default {
			inc x;
		}
	}
	if !('( x = 4 ) ) {
		throw "testswitch()";
	}
}

function testline() {
	var x, y, e;
	let x = $line( ${-} );
	let y = $line( ${-} );
	call assert( =( -( y x ) 1 ), $line( ${-} ) );
	try { call $line( 0 ); } catch e {}
	call assert( e, $line( ${-} ) );
}

program test {
	call hello();
	if testvoid() {
		throw "testvoid()";
	}
	call testvars( ONE );
	call testarray();
	call testfact();
	call testswitch();
	call testline();

	print "Tests passed.";
}
